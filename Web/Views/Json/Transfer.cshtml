@using SL.Util
@{
    int accountid;
    if (!SL.Web.Service.UserService.CheckAuth(out accountid))
    {
        return;
    }

    RequestUtil req = new RequestUtil();

    if ("list".Equals(Request.QueryString["action"]))
    {
        int page = req.Int("page");
        int pageSize = req.Int("pageSize");
        int type = req.Int("type");
        string keywords = req.String("keywords");

        string where = "b.Deleted=0";
        IList<object> parameters = new List<object>();
        int total;

        if (type == 1)
        {
            where += " and [Type]=1";
        }
        else if (type == 2)
        {
            where += "and [Status]=0";
        }
        else if (type == 3)
        {
            where += "and [Status]=1";
        }
        var account = SL.Data.SQL.QuerySingle("select Role,ShopID from Account where AccountID=@p0", accountid);

        if (account.Role == 0)
        {
            if (!string.IsNullOrEmpty(keywords))
            {
                where += "and [PlateNumber]=@p" + parameters.Count;
                parameters.Add(keywords);
            }

            where += "and a.ShopID=@p" + parameters.Count;
            parameters.Add((int)account.ShopID);
        }
        else
        {
            if (!string.IsNullOrEmpty(keywords))
            {
                where += "and [PlateNumber]=@p" + parameters.Count;
                parameters.Add(keywords);
            }
            else
            {
                where += "and AccountID=@p" + parameters.Count;
                parameters.Add(accountid);
            }
        }

        IList<dynamic> data;

        using (SL.Data.Database db = SL.Data.Database.Open())
        {

            data = db.QueryPage("TransferID",
               "AccountID,TransferID,a.ShopID,b.ShopName,PlateNumber,[Type],[Status],CarType,Buyer,BuyerMobile,BuyerAddress,Seller,SellerMobile,SellerAddress,TransferRegion,Price,IsUpload",
               "[Transfer] a left join Shop b on a.ShopID=b.ShopID",
               where,
               page,
               pageSize,
               parameters,
               out total,
               new Dictionary<string, bool>{
                { "dbo.Equal(AccountID,"+accountid+")", false },
                { "TransferID", false }
               });

            if (data != null)
            {
                dynamic item;
                String url = "http://" + Request.Url.Authority + "/compress/";
                for (int i = 0; i < data.Count; i++)
                {
                    item = data[i];
                    item.IsMine = item.AccountID == accountid;
                    IList<dynamic> photos = db.Query("select [Type],Photo from [Photo] where TransferID=@p0", (int)item.TransferID);
                    if (photos != null)
                    {
                        item.Photo1 = photos.FirstOrDefault(a => a.Type == 1);
                        item.Photo2 = photos.FirstOrDefault(a => a.Type == 2);
                        item.Photo3 = photos.FirstOrDefault(a => a.Type == 3);
                        item.Photo4 = photos.FirstOrDefault(a => a.Type == 4);
                        item.Photo5 = photos.FirstOrDefault(a => a.Type == 5);
                    }

                    item.Photo1 = item.Photo1 != null ? url + item.Photo1.Photo : null;
                    item.Photo2 = item.Photo2 != null ? url + item.Photo2.Photo : null;
                    item.Photo3 = item.Photo3 != null ? url + item.Photo3.Photo : null;
                    item.Photo4 = item.Photo4 != null ? url + item.Photo4.Photo : null;
                    item.Photo5 = item.Photo5 != null ? url + item.Photo5.Photo : null;

                    var hasPhoto = !string.IsNullOrEmpty(item.Photo1) && !string.IsNullOrEmpty(item.Photo2) && !string.IsNullOrEmpty(item.Photo3) && !string.IsNullOrEmpty(item.Photo4) && !string.IsNullOrEmpty(item.Photo5);

                    var hasInfo = !string.IsNullOrEmpty(item.CarType) && !string.IsNullOrEmpty(item.Buyer) && !string.IsNullOrEmpty(item.BuyerMobile) && !string.IsNullOrEmpty(item.BuyerAddress) && !string.IsNullOrEmpty(item.Seller) && !string.IsNullOrEmpty(item.SellerMobile) && !string.IsNullOrEmpty(item.SellerAddress)
                    && (item.Type == 0 || !string.IsNullOrEmpty(item.TransferRegion))
                    && (item.Type == 1 || item.Price != 0);

                    item.Persent = hasPhoto && item.AccountID != 0 && item.ShopID != 0 && hasInfo ? "100%" : "50%";
                }
            }
        }

        Json.Write(new { success = true, data = data, total = total }, Output);
    }
    else if ("get".Equals(Request.QueryString["action"]))
    {
        int id = req.Int("id");

        var item = SL.Data.SQL.QuerySingle("select AccountID,TransferID,a.ShopID,b.ShopName,PlateNumber,[Type],[Status],CarType,Buyer,BuyerMobile,BuyerAddress,Seller,SellerMobile,SellerAddress,TransferRegion,Price,IsUpload from [Transfer] a join Shop b on a.ShopID=b.ShopID where b.Deleted=0 and TransferID=@p0", id);

        if (item != null)
        {
            String url = "http://" + Request.Url.Authority + "/compress/";
            IList<dynamic> photos = SL.Data.SQL.Query("select [Type],Photo from [Photo] where TransferID=@p0", (int)item.TransferID);
            if (photos != null)
            {
                item.Photo1 = photos.FirstOrDefault(a => a.Type == 1);
                item.Photo2 = photos.FirstOrDefault(a => a.Type == 2);
                item.Photo3 = photos.FirstOrDefault(a => a.Type == 3);
                item.Photo4 = photos.FirstOrDefault(a => a.Type == 4);
                item.Photo5 = photos.FirstOrDefault(a => a.Type == 5);
            }

            item.Photo1 = item.Photo1 != null ? url + item.Photo1.Photo : null;
            item.Photo2 = item.Photo2 != null ? url + item.Photo2.Photo : null;
            item.Photo3 = item.Photo3 != null ? url + item.Photo3.Photo : null;
            item.Photo4 = item.Photo4 != null ? url + item.Photo4.Photo : null;
            item.Photo5 = item.Photo5 != null ? url + item.Photo5.Photo : null;

            var hasPhoto = !string.IsNullOrEmpty(item.Photo1) && !string.IsNullOrEmpty(item.Photo2) && !string.IsNullOrEmpty(item.Photo3) && !string.IsNullOrEmpty(item.Photo4) && !string.IsNullOrEmpty(item.Photo5);

            var hasInfo = !string.IsNullOrEmpty(item.CarType) && !string.IsNullOrEmpty(item.Buyer) && !string.IsNullOrEmpty(item.BuyerMobile) && !string.IsNullOrEmpty(item.BuyerAddress) && !string.IsNullOrEmpty(item.Seller) && !string.IsNullOrEmpty(item.SellerMobile) && !string.IsNullOrEmpty(item.SellerAddress)
            && (item.Type == 0 || !string.IsNullOrEmpty(item.TransferRegion))
            && (item.Type == 1 || item.Price != 0);

            item.Persent = hasPhoto && item.AccountID != 0 && item.ShopID != 0 && hasInfo ? "100%" : "50%";
        }

        Json.Write(new { success = true, data = item }, Output);
    }
    return;
}
